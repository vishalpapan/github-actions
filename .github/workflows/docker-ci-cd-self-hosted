name: Docker CI/CD with Code Quality

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'examples/python-app/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/python-app/**'

env:
  REGISTRY: docker.io
  IMAGE_NAME: vishalpapan/docker-demo-app

jobs:
  code-quality:
    name: Code Quality & Security
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd examples/docker-app
        npm install
    
    - name: Run ESLint
      run: |
        cd examples/docker-app
        npm run lint
    
    - name: Run tests with coverage
      run: |
        cd examples/docker-app
        npm run test:coverage
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: examples/docker-app

  build-and-push:
    name: Build & Push Docker Image
    runs-on: self-hosted
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: examples/docker-app
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}:latest
        format: 'table'
        exit-code: '0'

  test-image:
    name: Test Docker Image
    runs-on: self-hosted
    needs: build-and-push
    
    steps:
    - name: Test Docker image
      run: |
        docker run --rm -d -p 3000:3000 --name test-app ${{ env.IMAGE_NAME }}:latest
        sleep 10
        curl -f http://localhost:3000/health
        curl -f http://localhost:3000/
        docker stop test-app
